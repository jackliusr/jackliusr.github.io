<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on My learning and diary</title>
    <link>https://jackliusr.github.io/categories/tech/</link>
    <description>Recent content in tech on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Oct 2020 10:26:00 +0800</lastBuildDate>
    
	<atom:link href="https://jackliusr.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup kubeflow pipeline on local KIND cluster</title>
      <link>https://jackliusr.github.io/posts/2020/10/setup-kubeflow-pipeline-on-local-kind-cluster/</link>
      <pubDate>Sun, 04 Oct 2020 10:26:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/10/setup-kubeflow-pipeline-on-local-kind-cluster/</guid>
      <description># https://www.kubeflow.org/docs/pipelines/installation/localcluster-deployment/#deploying-kubeflow-pipelines # env/platform-agnostic-pns hasn&#39;t been publically released, so we install from master temporarily export PIPELINE_VERSION=1.0.1 kubectl apply -k &#34;github.com/kubeflow/pipelines/manifests/kustomize/cluster-scoped-resources?ref=$PIPELINE_VERSION&#34; kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io kubectl apply -k &#34;github.com/kubeflow/pipelines/manifests/kustomize/env/platform-agnostic-pns?ref=$PIPELINE_VERSION&#34; # expose gui kubectl port-forward -n kubeflow --address 0.0.0.0 svc/ml-pipeline-ui 8080:80   </description>
    </item>
    
    <item>
      <title>Create a multiple-nodes KIND kubernetes cluster</title>
      <link>https://jackliusr.github.io/posts/2020/09/create-a-multiple-nodes-kind-kubernetes-cluster/</link>
      <pubDate>Fri, 25 Sep 2020 22:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/09/create-a-multiple-nodes-kind-kubernetes-cluster/</guid>
      <description>KIND supports configuration items and you can find them at https://kind.sigs.k8s.io/docs/user/configuration. Following is the outline of the doc.
 Cluster-Wide Options ︎ Networking: ︎ IP Family ︎ API Server: port and listen address Pod Subnet ︎ Service Subnet ︎ Disable Default CNI: can be used to try other CNI for CKA and CKAD networks kube-proxy mode : iptables, ipvs Nodes: role control-plane, worker Per-Node Options ︎ Extra Mounts ︎ Extra Port Mappings ︎ Kubeadm Config Patches: Kubeadm Config Patches, kubeadm InitConfiguration and JoinConfiguration   My asciicast is as following:</description>
    </item>
    
    <item>
      <title>Pod CrashLoopBackOff Reason</title>
      <link>https://jackliusr.github.io/posts/2020/09/pod-crashloopbackoff-reason/</link>
      <pubDate>Tue, 22 Sep 2020 08:51:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/09/pod-crashloopbackoff-reason/</guid>
      <description>Today one of my deployments always got CrashLoopBackOff. Searching internet don&amp;#8217;t gave me the root cause of those errors even I went through all the steps. Steps from internets are all about describe, logs, liveProbe etc. I noticed the reason and exit code in last state when I described one of the pod. It should be the focus point to find root cause of CrashBoopBackOff.
 Containers: nginx: Container ID: containerd://9570e7e67d83692fdbe0e0871919a81222137fcaee2eaecb1eff6b772ec805b1 Image: nginx:1.</description>
    </item>
    
    <item>
      <title>Why I stick to jekyll</title>
      <link>https://jackliusr.github.io/posts/2020/08/why-i-stick-to-jekyll/</link>
      <pubDate>Sat, 15 Aug 2020 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/08/why-i-stick-to-jekyll/</guid>
      <description>I am a big fan of Tex and asciidoc. Asciidoctor is ruby based and can been easily integrated into jekyll. Hugo currently still has some rough edges in asciidoc integration. Considering the time and effort to switch to Hugo, it is not worth to do that.
 </description>
    </item>
    
    <item>
      <title>run redux-saga examples</title>
      <link>https://jackliusr.github.io/posts/2020/07/run-redux-saga-examples/</link>
      <pubDate>Tue, 07 Jul 2020 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/07/run-redux-saga-examples/</guid>
      <description>run redux-saga examples TL;DR:
 yarn yarn build
 I run into module not found issues when I try to run those examples under the repository of redus-saga. Even following comments in github issues and stackoverflow, those solutions don&amp;#8217;t work out.
 Scripts in the package.json of the root folder don&amp;#8217;t work for examples.
 After run yarn &amp;amp;&amp;amp; yarn build, can change directories to those examples and run them.</description>
    </item>
    
    <item>
      <title>Math jax testing</title>
      <link>https://jackliusr.github.io/posts/2019/02/math-jax-testing/</link>
      <pubDate>Fri, 01 Feb 2019 20:10:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2019/02/math-jax-testing/</guid>
      <description>The difference of two squared numbers
 $ a^2 - b^2 = (a + b )(a - b) $
 </description>
    </item>
    
    <item>
      <title>Twilio Call Status StateChart</title>
      <link>https://jackliusr.github.io/posts/2019/01/twilio-call-status-statechart/</link>
      <pubDate>Fri, 25 Jan 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2019/01/twilio-call-status-statechart/</guid>
      <description>I was not familiar with SIP states during the integration of VoIP products such as twilio, plivo and sinch. I am still confused about the state changes after reading documents. Here try to visualize the state change and help me to remember it. The state chart is based on my understanding. It is not necessarily correct. It is just for my reference.
 QueuedInitiatedRingingAnsweredInProgressCompletedBusyNoAnswerCanceledFailedQueued Queued - - Initiated Initiated - - Ringing Ringing - - Answered Answered - - InProgress InProgress - - Completed Initiated - - Busy Busy - - [*] Ringing - - NoAnswer NoAnswer - - [*] Ringing - - Canceled Canceled - - [*] Ringing - - Failed Failed - - [*] Completed - - [*] @enduml PlantUML version 1.</description>
    </item>
    
    <item>
      <title>Unit 1: Experimental Chemistry</title>
      <link>https://jackliusr.github.io/posts/2019/01/unit-1-experimental-chemistry/</link>
      <pubDate>Sat, 19 Jan 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2019/01/unit-1-experimental-chemistry/</guid>
      <description>Measurement     Physical properties
 SI Units
 Other Common Units
 Common measuring apparatus
   Name
 Symbol
   time
 second
 s
   hour (h)
  minutes(min)
  day
     digital stopwatch
  analogue stopwatch
     mass
 kilogram
 kg
   gram(g)
  tonne(t)</description>
    </item>
    
    <item>
      <title>Asciidoc diagram  samples of UML</title>
      <link>https://jackliusr.github.io/posts/2019/01/asciidoc-diagram-samples-of-uml/</link>
      <pubDate>Fri, 11 Jan 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2019/01/asciidoc-diagram-samples-of-uml/</guid>
      <description>PlantUML Diagram Class diagram&amp;#8212;&amp;#8203;Relations between Class:
     Type
 Sysmbol
   Extension
 &amp;lt;!--
   Composition
 *--
   Aggregation
 o--
    Asciidoc UML sample
 Class01Class02Class03Class04Class05Class06Class07Class08Class09Class10   PlantUML sample
 Class01Class02Class03Class04Class05Class06Class07Class08Class09Class10     </description>
    </item>
    
    <item>
      <title>Asynchronization is hard to implement</title>
      <link>https://jackliusr.github.io/posts/2019/01/asynchronization-is-hard-to-implement/</link>
      <pubDate>Thu, 10 Jan 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2019/01/asynchronization-is-hard-to-implement/</guid>
      <description>Asynchronization is very hard. It brings benefits with several catches for backend programming. Here is serveral catches and respective solutions. However all those will increase the cost of developments.
   Hard to debug and trace As the process breaks down to serveral asynchronious subprocesses, it is very difficult to relate all information of the process when something goes wrong. An extra overhead correlation Id is needed to adopt to ameliorate this issue.</description>
    </item>
    
    <item>
      <title>Diagrams samples</title>
      <link>https://jackliusr.github.io/posts/2018/12/diagrams-samples/</link>
      <pubDate>Thu, 20 Dec 2018 20:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2018/12/diagrams-samples/</guid>
      <description>Ditaa
 @font-face { font-family: sans-serif; }   </description>
    </item>
    
  </channel>
</rss>