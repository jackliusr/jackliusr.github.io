<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotnet on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/dotnet/</link>
    <description>Recent content in dotnet on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jun 2024 20:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>msbuild custom task and runtime reflection</title>
      <link>https://jackliusr.github.io/posts/2024/06/msbuild-custom-task-and-runtime-reflection/</link>
      <pubDate>Sun, 30 Jun 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/06/msbuild-custom-task-and-runtime-reflection/</guid>
      <description>Most information about custom task of msbuild are quite basic, it will get complicated when it is involved reflection. I tried several ways according searching results and answers from chatgpt: reflection, assemblyLoadContext and mono cecil. The most promising one is mono.cecil.
 I tried directly loading assemblies and via AssemblyLoadContext. They all failed to load some microsoft assemblies. It looks awkward even I can change my build scripts to copy those assemblies.</description>
    </item>
    
    <item>
      <title>.Net sdk version vs runtime version</title>
      <link>https://jackliusr.github.io/posts/2024/06/.net-sdk-version-vs-runtime-version/</link>
      <pubDate>Tue, 18 Jun 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/06/.net-sdk-version-vs-runtime-version/</guid>
      <description>What will you do when you encountered a runtime version is disallowed for specific version say 8.0.6 in building environment? Install the specific runtime version, right? Please hold, I show you my story.
 I initially thought I couldn’t run the below commands to install it, it is not. After several attempts, My colleague spotted the difference between runtime version and sdk version. They are different. A runtime version is supported by several sdk versions.</description>
    </item>
    
    <item>
      <title>setup nuget local packages feed</title>
      <link>https://jackliusr.github.io/posts/2024/06/setup-nuget-local-packages-feed/</link>
      <pubDate>Sun, 16 Jun 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/06/setup-nuget-local-packages-feed/</guid>
      <description>Nuget local feed Prerequisites nuget.exe is installed in C:\packages and in the command search path.
  Setup local feed Assume C:\packages\.nuget-local\packages will be the locations to install local packages. and several local dev packages need to install.
 Packages below: - &amp;#34;C:\packages\test.4.1.0-beta-24159.1.nupkg&amp;#34; - &amp;#34;C:\packages\testa.4.1.0-beta-24159.1.nupkg&amp;#34; - &amp;#34;C:\packages\testb.S3.4.1.0-beta-24159.1.nupkg&amp;#34;
 Run below commands to install above packages into source C:\packages\.nuget-local\packages
 REM run command line with C:\packages as working directory nuget.exe add tes.</description>
    </item>
    
    <item>
      <title>Recent learnings in dotnet and FHIR</title>
      <link>https://jackliusr.github.io/posts/2024/06/recent-learnings-in-dotnet-and-fhir/</link>
      <pubDate>Wed, 12 Jun 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/06/recent-learnings-in-dotnet-and-fhir/</guid>
      <description>In the past several months, I called it quite intensive. I need to master the knowledge of FHIR, advanced dotnet technologies (attributes, generator, reflection, code emit, expression tree, advanced linq, customized aspnet pipeline, nuget package), code optimization technologies and several aws technologies (DynamoDB, S3, glue, spark) in depth to meet the schedule of a project. You really can’t account on solution architects or support engineers from cloud providers. I don’t get one perfect answers from them so far when I used their services.</description>
    </item>
    
    <item>
      <title>Issues and corresponding solutions of dotnet razor</title>
      <link>https://jackliusr.github.io/posts/2024/01/issues-and-corresponding-solutions-of-dotnet-razor/</link>
      <pubDate>Thu, 25 Jan 2024 12:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/01/issues-and-corresponding-solutions-of-dotnet-razor/</guid>
      <description>Seperate view dll issues Put views (cshtml) into the main web project
   &amp;#39;RazorTargetAssemblyInfo.cs&amp;#39; could not be found GenerateAssemblyVersionAttribute is set to true : af file MyProject.RazorTargetAssemblyInfo.cs is generated
 &amp;lt;Project Sdk=&amp;#34;Microsoft.NET.Sdk.Razor&amp;#34;&amp;gt; &amp;lt;PropertyGroup&amp;gt; &amp;lt;TargetFramework&amp;gt;netcoreapp3.1&amp;lt;/TargetFramework&amp;gt; &amp;lt;GenerateAssemblyVersionAttribute&amp;gt;true&amp;lt;/GenerateAssemblyVersionAttribute&amp;gt; &amp;lt;/PropertyGroup&amp;gt;   https://github.com/dotnet/aspnetcore/issues/37795#issue-1034241118
   The namespace &amp;#39;Razor&amp;#39; already contains a definition for &amp;#39;Template&amp;#39; https://stackoverflow.com/a/58140724/1101691
   Duplicate &amp;#39;Microsoft.AspNetCore.Razor.Hosting.RazorLanguageVersionAttribute&amp;#39; attribute   How to decompile/extract(cshtml--(razor view)) from dll https://stackoverflow.com/a/69951824/1101691
   </description>
    </item>
    
    <item>
      <title>decompling dotnet assemblies</title>
      <link>https://jackliusr.github.io/posts/2024/01/decompling-dotnet-assemblies/</link>
      <pubDate>Mon, 22 Jan 2024 12:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/01/decompling-dotnet-assemblies/</guid>
      <description>I used dotpeek for a while to decompile dotnet assembly. Only yesterday I finally found a way to export project from dotnet assembly. The picture below is the menu to do that in dotpeek. However the version I used doesn’t perfectly decompile lambda expression. The decompiled code of lambda expressions are very hard to understand.
      Ilspy is one of decompiler that can decompile lambda in a understandble way.</description>
    </item>
    
    <item>
      <title>Scaffold Identity into an MVC project without existing authorization</title>
      <link>https://jackliusr.github.io/posts/2023/07/scaffold-identity-into-an-mvc-project-without-existing-authorization/</link>
      <pubDate>Sun, 30 Jul 2023 20:40:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2023/07/scaffold-identity-into-an-mvc-project-without-existing-authorization/</guid>
      <description>Today I tried to integrate identity into mvc projects. The main doc about this is at https://learn.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-7.0&amp;amp;tabs=netcore-cli#scaffold-identity-into-an-mvc-project-without-existing-authorization
 dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design dotnet add package Microsoft.EntityFrameworkCore.Design dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore dotnet add package Microsoft.AspNetCore.Identity.UI dotnet add package Microsoft.EntityFrameworkCore.Tools # add second dbcontext for identity and authorinization, use database sqlite dotnet aspnet-codegenerator identity -dc MyApplication.Data.ApplicationDbContext \ --files &amp;#34;Account.Register;Account.Login&amp;#34; --databaseProvider sqlite dotnet ef migrations add CreateIdentitySchema \ --context MyApplication.Data.ApplicationDbContext dotnet ef database update \ --context MyApplication.</description>
    </item>
    
    <item>
      <title>Set timezone in asp.net 6.0 in linux container</title>
      <link>https://jackliusr.github.io/posts/2022/07/set-timezone-in-asp.net-6.0-in-linux-container/</link>
      <pubDate>Thu, 21 Jul 2022 21:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/07/set-timezone-in-asp.net-6.0-in-linux-container/</guid>
      <description>According to many articles one the web, the way to set timezone is as following:
 cp /usr/share/zoneinfo/Asia/Singapore /etc/localtime echo &amp;#39;Asia/Singapore&amp;#39; &amp;gt; /etc/timezone   You can indeed get the correct time if you run it in dotnet core 5 docker linux containers. However you couldn’t get the correct local time in dotnet 6.0. I found the issue About time incorrect of docker image about aspnet-6 #62545. After I tried serveral combinations mentioned in the issue, finally I got a working solution.</description>
    </item>
    
  </channel>
</rss>
