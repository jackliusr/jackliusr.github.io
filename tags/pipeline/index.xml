<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pipeline on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/pipeline/</link>
    <description>Recent content in pipeline on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Feb 2025 22:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/pipeline/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Speeding Up DevSecOps: Rethinking the Shift-Left Approach</title>
      <link>https://jackliusr.github.io/posts/2025/02/speeding-up-devsecops-rethinking-the-shift-left-approach/</link>
      <pubDate>Thu, 13 Feb 2025 22:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2025/02/speeding-up-devsecops-rethinking-the-shift-left-approach/</guid>
      <description>Introduction In the world of modern software development, Shift-Left Security and DevSecOps have become de facto practices. The idea is simple: security should not be an afterthought but rather an integral part of the development lifecycle, starting as early as possible. While these practices strengthen security and compliance, they often introduce additional steps that can slow down the development pipeline. This raises an important question: Is there a way to speed things up without sacrificing security?</description>
    </item>
    
    <item>
      <title>CICD</title>
      <link>https://jackliusr.github.io/posts/2024/06/cicd/</link>
      <pubDate>Fri, 21 Jun 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/06/cicd/</guid>
      <description>I shared one of CICD I designed and implemented in linkedin. It is good to keep here as well. I researched several options and put my thought at Reflection on implementation of CICD using argo-workflows
   Nowadays, argo-workflows is quite mature. I will use argo-workflows for CI part in my future projects. It is definitely worth to invest oneâ€™s time on argo-workflow as it is widely used.
 </description>
    </item>
    
    <item>
      <title>github, action-runner, argo-cd: my cicd pipelines</title>
      <link>https://jackliusr.github.io/posts/2023/02/github-action-runner-argo-cd-my-cicd-pipelines/</link>
      <pubDate>Wed, 01 Feb 2023 17:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2023/02/github-action-runner-argo-cd-my-cicd-pipelines/</guid>
      <description>Usually I explain one of my CICD pipeline to others with words such like github action + argo-cd. I am not sure if they understand it. A picture is worth a thousand words. Here is my CICD pipeline picture.
      I used excalidraw to draw the diagram. Excalidraw link is https://excalidraw.com/#json=zJHTTZ_QgcarkYCCankS8,gotb3rzXtE8ux810NoK18A. Feel free to use it.
 </description>
    </item>
    
    <item>
      <title>Reflection on the usage of bazel</title>
      <link>https://jackliusr.github.io/posts/2022/04/reflection-on-the-usage-of-bazel/</link>
      <pubDate>Tue, 12 Apr 2022 19:10:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/04/reflection-on-the-usage-of-bazel/</guid>
      <description>TLDR: Bazel is definitely worth to use on your projects even though it has minimum supports of some languages such as C#.
   Prologue Before I was interested in bazel, I always thought why bother to learn a new building system even I knew that kubernetes once was built with bazel. 4 months ago, I was involved in a micro service structured project. I was dissatisfied with dev workflow using skaffold and I looked other options in the market.</description>
    </item>
    
  </channel>
</rss>
