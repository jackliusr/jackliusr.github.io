<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jsonchema on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/jsonchema/</link>
    <description>Recent content in jsonchema on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Apr 2024 20:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/jsonchema/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2 jsonchema tricks</title>
      <link>https://jackliusr.github.io/posts/2024/04/2-jsonchema-tricks/</link>
      <pubDate>Thu, 04 Apr 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/04/2-jsonchema-tricks/</guid>
      <description>Background I worked on APIs and OpenAPI Spec (OAS) in past projects, even I used stoplight and NLP for open-source API style guide enforce and linting. I thought I was quite good at jsonschema. I dontâ€™k think so after recent usage of jsonschema for a very aspnet flexible configuration file.
 Configurations in dotnet are quite straight forwards if all the configurations following the Options pattern. ConfigurationProcessor is not that case.</description>
    </item>
    
  </channel>
</rss>
