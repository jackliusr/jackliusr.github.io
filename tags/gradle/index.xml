<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gradle on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/gradle/</link>
    <description>Recent content in gradle on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Dec 2022 13:01:10 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>some packages cannot be resolved in eclipse with gradle projects</title>
      <link>https://jackliusr.github.io/posts/2022/12/some-packages-cannot-be-resolved-in-eclipse-with-gradle-projects/</link>
      <pubDate>Sun, 18 Dec 2022 13:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/12/some-packages-cannot-be-resolved-in-eclipse-with-gradle-projects/</guid>
      <description>In the past two days, I always got the errors &amp;#34;packages cannot be resolved&amp;#34; in eclipse with gradle projects. Initial I encountered the issue, I desperately wanted to resolved the issue. I tried several ways to do that by using solutions from web, however I didnâ€™t get my issue resolved. Due to time constraint, I went back to the old mvn way to do the project. Today I have sometime to revisit the issue now.</description>
    </item>
    
    <item>
      <title>conditional compiling in flutter project</title>
      <link>https://jackliusr.github.io/posts/2022/09/conditional-compiling-in-flutter-project/</link>
      <pubDate>Sun, 11 Sep 2022 21:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/09/conditional-compiling-in-flutter-project/</guid>
      <description>In the last week, I intermittently worked on how to compile a flutter project conditionally like the way c/c++ in busy daily work schedules. I knew that flavor is the way to go, however there are still serveral issues opened to explore to make it better or to understand the rationale behind the scene.
   Dependency Injections using get_it and injectable: Tree Shaking Capability
  Pack only neccessary components into the mobile app:</description>
    </item>
    
  </channel>
</rss>
