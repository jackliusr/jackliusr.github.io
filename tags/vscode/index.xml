<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/vscode/</link>
    <description>Recent content in vscode on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Apr 2022 19:10:10 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup vscode development for dapr in WSL</title>
      <link>https://jackliusr.github.io/posts/2022/04/setup-vscode-development-for-dapr-in-wsl/</link>
      <pubDate>Tue, 26 Apr 2022 19:10:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/04/setup-vscode-development-for-dapr-in-wsl/</guid>
      <description>Dapr development is quite difficult to setup correctly. You can get the idea from (this issue) as the issue is still open now since it was created.
 I followed the instruction to install dapr vs code extension in dapr. My environment is WSL based. I tried several times to try to debug the dapr applications and failed. I noticed in the following screenshot that there was a warning icon before kubernetes.</description>
    </item>
    
    <item>
      <title>vscode debug python containers running kubernetes via attachment</title>
      <link>https://jackliusr.github.io/posts/2020/11/vscode-debug-python-containers-running-kubernetes-via-attachment/</link>
      <pubDate>Fri, 20 Nov 2020 19:35:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2020/11/vscode-debug-python-containers-running-kubernetes-via-attachment/</guid>
      <description>python-guestbook at https://github.com/GoogleCloudPlatform/cloud-code-samples is used to practice debug python containers in kubernetes.
 Google cloud python code vscode plugin 1.7.0 failed to run python on kubernetes or there is no obvious way to do that as depicted in the below pic.      Steps to make it:
  run
skaffold debug     Import ptvsd in the python file to debug, add breakout() before the line to debug</description>
    </item>
    
  </channel>
</rss>
