<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>container on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/container/</link>
    <description>Recent content in container on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Oct 2024 09:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Speed up postgresql container without initing everytime</title>
      <link>https://jackliusr.github.io/posts/2024/10/speed-up-postgresql-container-without-initing-everytime/</link>
      <pubDate>Thu, 24 Oct 2024 09:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/10/speed-up-postgresql-container-without-initing-everytime/</guid>
      <description>A newly created postgresql container will do a following steps. They are quite time consuming in integration testing and add some unpredictable factor. If a integration testing will clean up tables and data, volumes can be used to speed up postgresql container.
   pg_ctl -D /var/lib/postgresql/data -l logfile start
  initdb
  stop postgresql and start again
   There might be one issue, do I need to maintain the same credential?</description>
    </item>
    
    <item>
      <title>same device mounted on differences mount points</title>
      <link>https://jackliusr.github.io/posts/2022/05/same-device-mounted-on-differences-mount-points/</link>
      <pubDate>Mon, 30 May 2022 23:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/05/same-device-mounted-on-differences-mount-points/</guid>
      <description>As in my previous article, I gave the following information of my pod. I still have some time before bed, I couldnâ€™t help to seek the reason of that.
 /usr/share/nginx/html # df -h Filesystem Size Used Available Use% Mounted on overlay 80.0G 34.5G 45.5G 43% / tmpfs 64.0M 0 64.0M 0% /dev tmpfs 3.7G 0 3.7G 0% /sys/fs/cgroup /dev/nvme0n1p1 80.0G 34.5G 45.5G 43% /dev/termination-log /dev/nvme0n1p1 80.0G 34.5G 45.5G 43% /etc/resolv.</description>
    </item>
    
  </channel>
</rss>
