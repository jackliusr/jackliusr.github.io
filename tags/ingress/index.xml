<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ingress on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/ingress/</link>
    <description>Recent content in ingress on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Aug 2022 21:01:10 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/ingress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use cert-manager to secure kubernetes cert-manager behind nginx ingress</title>
      <link>https://jackliusr.github.io/posts/2022/08/use-cert-manager-to-secure-kubernetes-cert-manager-behind-nginx-ingress/</link>
      <pubDate>Tue, 02 Aug 2022 21:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/08/use-cert-manager-to-secure-kubernetes-cert-manager-behind-nginx-ingress/</guid>
      <description>Today I had a case to expose serveral kubernetes dashboard with cert-manager. Initiallly I thought it should be quite easy to setup, but the reality was quite different. My intial yaml is as following.
 apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: ingress-global-dash namespace: kubernetes-dashboard labels: name: ingress-global-dash use-http01-solver: &amp;#34;true&amp;#34; annotations: cert-manager.io/cluster-issuer: &amp;#34;test-issuer&amp;#34; spec: ingressClassName: nginx rules: - host: &amp;#34;dashboard.example.com&amp;#34; http: paths: - pathType: Prefix path: &amp;#34;/&amp;#34; backend: service: name: kubernetes-dashboard port: number: 80 #later changed to 443 according to port of kubernetes-dashboard svc tls: # &amp;lt; placing a host in the TLS config will determine what ends up in the cert&amp;#39;s subjectAltNames - hosts: - dashboard.</description>
    </item>
    
    <item>
      <title>Exposing TCP and UDP services in nginx ingress</title>
      <link>https://jackliusr.github.io/posts/2021/03/exposing-tcp-and-udp-services-in-nginx-ingress/</link>
      <pubDate>Tue, 02 Mar 2021 17:00:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2021/03/exposing-tcp-and-udp-services-in-nginx-ingress/</guid>
      <description>Add command line flags in ingress controller:  --tcp-services-configmap
  --udp-services-configmap
     Create configmap apiVersion: v1 kind: ConfigMap metadata: name: tcp-services namespace: ingress-nginx data: 5432: &amp;#34;default/postgres:5432&amp;#34;     Patch the ingress-nginx-controller to allow port 5432 spec: template: spec: containers: - name: controller ports: - containerPort: 6379 hostPort: 6379     Add inbound rule to security group of node groups   Reference: https://minikube.</description>
    </item>
    
    <item>
      <title>nginx ingress and SPA sites</title>
      <link>https://jackliusr.github.io/posts/2021/01/nginx-ingress-and-spa-sites/</link>
      <pubDate>Mon, 18 Jan 2021 21:53:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2021/01/nginx-ingress-and-spa-sites/</guid>
      <description>Several months ago, I resolved the issue &amp;#34;404 Error on refresh with SPA&amp;#34; by using nginx try_files directive, this time it was quite different as the apps were deployed into kubernetes. I tried nginx.ingress.kubernetes.io/use-regex:true and nginx.ingress.kubernetes.io/rewrite-target: /$1. To avoid to block others to others to use staging environment, I setup an skaffold local development environment to troubeshooting the issue. I tried following annotation as well.
 nginx.ingress.kubernetes.io/configuration-snippet: | try_files $uri $uri/ /index.</description>
    </item>
    
  </channel>
</rss>
