<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/terraform/</link>
    <description>Recent content in terraform on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Dec 2022 12:01:10 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraform advantages over cloudformation or ARM tempaltes</title>
      <link>https://jackliusr.github.io/posts/2022/12/terraform-advantages-over-cloudformation-or-arm-tempaltes/</link>
      <pubDate>Sat, 31 Dec 2022 12:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/12/terraform-advantages-over-cloudformation-or-arm-tempaltes/</guid>
      <description>Terraform site gives several use cases and comparison with other IaC langauges. I think there are few things of terraform that stand out when comparing it with other tools such as cloudformation, ARM tempaltes IaC languages.
 multi-cloud deployment When you only use one cloud-providerâ€™s solution to do IaC and things get in your way, you will have hard time to migrate to other providers as you already invested heavily into one provider.</description>
    </item>
    
  </channel>
</rss>
