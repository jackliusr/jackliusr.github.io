<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FHIR on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/fhir/</link>
    <description>Recent content in FHIR on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Apr 2024 20:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/fhir/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data modeling of FHIR searchindices in AWS dynamoDB</title>
      <link>https://jackliusr.github.io/posts/2024/04/data-modeling-of-fhir-searchindices-in-aws-dynamodb/</link>
      <pubDate>Fri, 05 Apr 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/04/data-modeling-of-fhir-searchindices-in-aws-dynamodb/</guid>
      <description>Microsoft FHIR Server serialize searchindices this way in cosmosdb. How to model it in AWS DynamoDB?
 I downloaded DynamoDB local to learn how to model for this case. I tried to model it as the way in cosmosdb. Later I found it is hard to filter data based on the some values in the list. Later I modelled it as map of map in DynamoDB.
      After I completed this model, I was wondering why microsoft do that way.</description>
    </item>
    
    <item>
      <title>Extract multiple fields at different levels of nesting json using chatgpt and jmespath</title>
      <link>https://jackliusr.github.io/posts/2024/03/extract-multiple-fields-at-different-levels-of-nesting-json-using-chatgpt-and-jmespath/</link>
      <pubDate>Sat, 02 Mar 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/03/extract-multiple-fields-at-different-levels-of-nesting-json-using-chatgpt-and-jmespath/</guid>
      <description>How do you extract multiple fields at different levels of nesting json resources? jsonpath, jq, jmespath or chatgpt?
 In FHIR, bundle resource in json format usually have multiple level of details nested in json. It’s quite different from other use cases.
 My first thought is using jsonpath as it is quite similar to FHIRPath. There are several limitations of jsonpath which make it infeasible.
  It doesn’t support to the use case, even though JsonPath supports deep scan and Bracket-notated child or children.</description>
    </item>
    
  </channel>
</rss>
