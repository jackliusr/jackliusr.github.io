<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on My learning and diary</title>
    <link>https://jackliusr.github.io/tags/docker/</link>
    <description>Recent content in docker on My learning and diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2024 20:10:00 +0800</lastBuildDate><atom:link href="https://jackliusr.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run athena and pyspark locally</title>
      <link>https://jackliusr.github.io/posts/2024/04/run-athena-and-pyspark-locally/</link>
      <pubDate>Mon, 15 Apr 2024 20:10:00 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2024/04/run-athena-and-pyspark-locally/</guid>
      <description>Best practice or &amp;#34;aws configure&amp;#34; will put ~/.aws/config and ~/.aws/credentials in the 600 mode. however if you follow Developing using a Docker image, you will get several errors e.g. cant&amp;#39; find region, reach endpoints, or no access to resources.
 I run docker command as a normal user, docker daemon run as root user. The below scripts will run a docker image which default user is glue_user (10000). the mounted volume ~/.</description>
    </item>
    
    <item>
      <title>Setup docker in wsl2</title>
      <link>https://jackliusr.github.io/posts/2023/05/setup-docker-in-wsl2/</link>
      <pubDate>Tue, 23 May 2023 20:01:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2023/05/setup-docker-in-wsl2/</guid>
      <description>Installation I installed Ubuntu 22.04 on my laptop following the scripts here.
 sudo apt-get update sudo apt-get install ca-certificates curl gnupg sudo install -m 0755 -d /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg sudo chmod a+r /etc/apt/keyrings/docker.gpg echo \ &amp;#34;deb [arch=&amp;#34;$(dpkg --print-architecture)&amp;#34; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \ &amp;#34;$(. /etc/os-release &amp;amp;&amp;amp; echo &amp;#34;$VERSION_CODENAME&amp;#34;)&amp;#34; stable&amp;#34; | \ sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin service docker start     Troubleshootig It is little different from my previous installation.</description>
    </item>
    
    <item>
      <title>Kubernetes and immutable infrastructure: docker image digest and image labels</title>
      <link>https://jackliusr.github.io/posts/2022/05/kubernetes-and-immutable-infrastructure-docker-image-digest-and-image-labels/</link>
      <pubDate>Fri, 27 May 2022 19:10:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/05/kubernetes-and-immutable-infrastructure-docker-image-digest-and-image-labels/</guid>
      <description>Summary: use digest as the way to refer to docker images in kubernetes resources, put commit id in image labels.
 An idempotency and immutable infrastructure has a slew of benefits. I am a firm believer of it and I did my best to keep several projects in that way. In the past few weeks, I helped one friend to resolve system structure, performance issue and development experience of one of his projects.</description>
    </item>
    
    <item>
      <title>docker buildx multi-context, multi-platform, multi-stage and secrets in action</title>
      <link>https://jackliusr.github.io/posts/2022/05/docker-buildx-multi-context-multi-platform-multi-stage-and-secrets-in-action/</link>
      <pubDate>Mon, 23 May 2022 20:10:10 +0800</pubDate>
      
      <guid>https://jackliusr.github.io/posts/2022/05/docker-buildx-multi-context-multi-platform-multi-stage-and-secrets-in-action/</guid>
      <description>Prologue Today I migrated several golang projects to golang 1.18. I had several hiccups today. Letâ€™s called docker buildx multi-context, multi-platform, multi-stage and secrets in action.
   Multi-platform I started to look into one iOS and android app of our projects one week ago, and started to use Mac Air M1. Mac Air M1 is arm64 based, however our production environment is amd64 based. I had to do some changes to make the images built on my or my colleagues&amp;#39; machine can be runnable in production environment.</description>
    </item>
    
  </channel>
</rss>
